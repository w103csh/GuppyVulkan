  o Hook up CDLOD to the ocean surface heightmap.
  o Fix smoothing issues with the surface.
    o I currently think that the chopiness factor (lamda) is causing this problem. The calculation
      that determines the height also displaces the position laterally, which is not accounted for
      in the normal.
        o Re-read the paper and see if there is something in there about this.
        o Try a smoothing compute convolution pass?
  o Fix subpass dependencies. I think this is also covered by best practices.
    o I fixed some of this code for the deferred render pass but I didn't fix it everywhere. I
      should also resolve the mrt attachments in the first pass, and only store the mrt attachments
      I want to utilize the multisample information for in the combine step...
  o Turn on validation layers (best practices, etc.)
  o Move static CreatInfo out of struct and just set in constructors of handlee's (NAME, TYPE, etc.)
    and have all handlee's take the CreateInfo in an Init function. This way the reset/init pattern
    can be used to create dynamic pipelines and things easier. At this point I should probably move
    closer to the OnInit/init, OnReset/reset, etc. pattern. *** I think this would require two
    Init's: EarlyInit() (instantiate things), LateInit() (do work that depends on instantiation). ***
  o If sky box is going to be a cubemap I render to then render the cubemap one frame and sample the
    the cubemap the next frame, so I can remove all dependencies from the cubemap rendering.
  o Add screen space volumetric lighting.
  o Add cloud generation.
  o Add boat.
  o Add PhysX around time of boat.
  o Fix command buffers re-recording when they don't need to.
  o Waiting on fences for compute work is a terrible idea - especially in the frame() functions (like
    in ComputeWork::Ocean). I shouldn't have to enumerate all of the problems with this here, but I
    want a record of the fact that I did this somewhere, so I don't forget. It will probably never
    matter.
  o Update all of the textures that don't have copy buffers to use SamplerCreateInfo::initialLayout.
    Really I should just change all the image creation code now that I know what I'm doing...


  o If I pause and unpause the ocean simulation super quick then the validation layers bark about
    semaphores.
  o It just dawned on me that the onX() x() pattern for lifecycle function inheritance I am trying to
    start has the names backwards. For example, onFrame() should be the virtual function and frame()
    should be the non-virtual function. I don't know what I was thinking.

  o Ideas for how to fix the colors on the ocean surface:
    o Re-calculate the normals so that they account for the displacement.
    o ...

  o Volumetric Lighting:
    o NOTE: The apply step of the volumetric lighting pass uses a dual source blend operation where
      the coefficient used for the data already in the frame buffer
      (e.g., exp(-sigma_ext*scene_distance)) requires the data in the framebuffer to have depth.
      So, if something in the scene doesn't have depth then the blend doesn't look correct... I
      should try to come up with some clever way around this.
    o Add light to the deferred shading model, currently it doesn't contributes light to surfaces,
      or casts a shadow.
    o Get the directional type to work. During initial implementation I didn't test any of it. I
      think this is probably what I need for sunlight/moonlight.
    o Get multiple lights to work... probably not necessary.