vec4 blurPass2() {
#if _DS_SMP_SCR_BLUR_B > 0
    float dx = 1.0 / textureSize(sampBlurB, 0).x;
    vec3 sum = texture(sampBlurB, fragTexCoord).rbg * data.weights0_3[0];
    {
        sum += texture(sampBlurB, fragTexCoord + vec2(1.0, 0.0) * dx).rgb * data.weights0_3[1];
        sum += texture(sampBlurB, fragTexCoord - vec2(1.0, 0.0) * dx).rgb * data.weights0_3[1];
        sum += texture(sampBlurB, fragTexCoord + vec2(2.0, 0.0) * dx).rgb * data.weights0_3[2];
        sum += texture(sampBlurB, fragTexCoord - vec2(2.0, 0.0) * dx).rgb * data.weights0_3[2];
        sum += texture(sampBlurB, fragTexCoord + vec2(3.0, 0.0) * dx).rgb * data.weights0_3[3];
        sum += texture(sampBlurB, fragTexCoord - vec2(3.0, 0.0) * dx).rgb * data.weights0_3[3];
    }
    {
        sum += texture(sampBlurB, fragTexCoord + vec2(4.0, 0.0) * dx).rgb * data.weights4_7[0];
        sum += texture(sampBlurB, fragTexCoord - vec2(4.0, 0.0) * dx).rgb * data.weights4_7[0];
        sum += texture(sampBlurB, fragTexCoord + vec2(5.0, 0.0) * dx).rgb * data.weights4_7[1];
        sum += texture(sampBlurB, fragTexCoord - vec2(5.0, 0.0) * dx).rgb * data.weights4_7[1];
        sum += texture(sampBlurB, fragTexCoord + vec2(6.0, 0.0) * dx).rgb * data.weights4_7[2];
        sum += texture(sampBlurB, fragTexCoord - vec2(6.0, 0.0) * dx).rgb * data.weights4_7[2];
        sum += texture(sampBlurB, fragTexCoord + vec2(7.0, 0.0) * dx).rgb * data.weights4_7[3];
        sum += texture(sampBlurB, fragTexCoord - vec2(7.0, 0.0) * dx).rgb * data.weights4_7[3];
    }
    {
        sum += texture(sampBlurB, fragTexCoord + vec2(8.0, 0.0) * dx).rgb * data.weights8_9[0];
        sum += texture(sampBlurB, fragTexCoord - vec2(8.0, 0.0) * dx).rgb * data.weights8_9[0];
        sum += texture(sampBlurB, fragTexCoord + vec2(9.0, 0.0) * dx).rgb * data.weights8_9[1];
        sum += texture(sampBlurB, fragTexCoord - vec2(9.0, 0.0) * dx).rgb * data.weights8_9[1];
    }
    return vec4(sum, 1.0);
#else
    return vec4(0.0);
#endif
}