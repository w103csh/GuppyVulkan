
#include "DescriptorConstants.h"

const std::map<DESCRIPTOR, VkDescriptorType> DESCRIPTOR_TYPE_MAP = {
    // DEFAULT
    {DESCRIPTOR::CAMERA_PERSPECTIVE_DEFAULT, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
    // LIGHT
    {DESCRIPTOR::LIGHT_POSITIONAL_DEFAULT, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
    {DESCRIPTOR::LIGHT_SPOT_DEFAULT, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
    {DESCRIPTOR::LIGHT_POSITIONAL_PBR, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
    // FOG
    {DESCRIPTOR::FOG_DEFAULT, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
    // PROJECTOR
    {DESCRIPTOR::PROJECTOR_DEFAULT, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER},
    // MATERIAL
    {DESCRIPTOR::MATERIAL_DEFAULT, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC},
    {DESCRIPTOR::MATERIAL_PBR, VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC},
    // SAMPLER
    {DESCRIPTOR::SAMPLER_MATERIAL_COMBINED, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER},
    {DESCRIPTOR::SAMPLER_PIPELINE_COMBINED, VK_DESCRIPTOR_TYPE_COMBINED_IMAGE_SAMPLER},
};

const std::set<DESCRIPTOR> DESCRIPTOR_UNIFORM_ALL = {
    DESCRIPTOR::CAMERA_PERSPECTIVE_DEFAULT,
    DESCRIPTOR::LIGHT_POSITIONAL_DEFAULT,
    DESCRIPTOR::LIGHT_POSITIONAL_PBR,
    DESCRIPTOR::LIGHT_SPOT_DEFAULT,
    DESCRIPTOR::FOG_DEFAULT,
    DESCRIPTOR::PROJECTOR_DEFAULT,
};

const std::set<DESCRIPTOR> DESCRIPTOR_MATERIAL_ALL = {
    DESCRIPTOR::MATERIAL_DEFAULT,
    DESCRIPTOR::MATERIAL_PBR,
};

const std::set<DESCRIPTOR_SET> DESCRIPTOR_SET_ALL = {
    // DEFAULT
    DESCRIPTOR_SET::UNIFORM_DEFAULT,
    DESCRIPTOR_SET::SAMPLER_DEFAULT,
    DESCRIPTOR_SET::SAMPLER_CUBE_DEFAULT,
    DESCRIPTOR_SET::PROJECTOR_DEFAULT,
    // PBR
    DESCRIPTOR_SET::UNIFORM_PBR,
    // PARALLAX
    DESCRIPTOR_SET::UNIFORM_PARALLAX,
    DESCRIPTOR_SET::SAMPLER_PARALLAX,
};